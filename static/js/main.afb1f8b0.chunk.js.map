{"version":3,"sources":["components/navbar.js","pages/homePage.js","pages/backpackPage.js","components/comingsoonSign.js","pages/hatPage.js","pages/tshirtPage.js","serviceWorker.js","index.js","app.js"],"names":["Navbar","props","backpackStyle","height","width","margin","tshirtStyle","hatStyle","defaultSelectedKeys","mode","a","check","navigator","userAgent","vendor","window","opera","test","substr","console","log","isOnDesktop","Item","key","to","type","component","alt","style","src","Content","Layout","HomePage","BackbackPage","ComingsoonSign","overflow","backgroundColor","textAlign","maxWidth","HatPage","TshirtPage","Boolean","location","hostname","match","ReactDOM","render","exact","path","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"+OAQe,SAASA,EAAOC,GAC3B,IAAMC,EAAgB,CAClBC,OAAQ,OACRC,MAAO,OACPC,OAAQ,WAGNC,EAAc,CAChBH,OAAQ,OACRC,MAAO,OACPC,OAAQ,eAGNE,EAAW,CACbJ,OAAQ,OACRC,MAAO,OACPC,OAAQ,WAUZ,OACI,kBAAC,IAAD,CACIG,oBAAqBP,EAAMO,oBAC3BC,KAVR,WACI,IACWC,EADPC,GAAQ,EAGZ,OAFWD,EAAg8DE,UAAUC,WAAaD,UAAUE,QAAUC,OAAOC,OAAz+D,2TAA2TC,KAAKP,IAAM,0kDAA0kDO,KAAKP,EAAEQ,OAAO,EAAG,OAAKP,GAAQ,GACl8DQ,QAAQC,IAAI,gBAAkBT,GACvBA,EAMGU,GAAgB,aAAe,YAErC,kBAAC,IAAKC,KAAN,CAAWC,IAAI,QACX,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,CAAMC,KAAK,SADf,mBAKJ,kBAAC,IAAKH,KAAN,CAAWC,IAAI,YACX,kBAAC,IAAD,CAAMC,GAAG,aACL,kBAAC,IAAD,CAAME,UAAW,kBAAO,yBAAKC,IAAI,gBAAgBC,MAAO1B,EAAe2B,IAAI,qBAD/E,SAKJ,kBAAC,IAAKP,KAAN,CAAWC,IAAI,UACX,kBAAC,IAAD,CAAMC,GAAG,WACL,kBAAC,IAAD,CAAME,UAAW,kBAAO,yBAAKC,IAAI,cAAcC,MAAOtB,EAAauB,IAAI,mBAD3E,eAKJ,kBAAC,IAAKP,KAAN,CAAWC,IAAI,OACX,kBAAC,IAAD,CAAMC,GAAG,QACL,kBAAC,IAAD,CAAME,UAAW,kBAAO,yBAAKC,IAAI,WAAWC,MAAOrB,EAAUsB,IAAI,gBADrE,Y,ICtDRC,EAAYC,IAAZD,QAEO,SAASE,IACpB,OACI,kBAAC,IAAD,KACI,kBAAChC,EAAD,CAAQQ,oBAAoB,SAC5B,kBAACsB,EAAD,OCNG,SAASG,IACpB,OACI,kBAAC,IAAD,KACI,kBAACjC,EAAD,CAAQQ,oBAAoB,cCJzB,SAAS0B,IACpB,OACI,kBAAC,IAAD,KACI,yBAAKN,MAAO,CAAEO,SAAU,SAAUhC,OAAQ,OAAQiC,gBAAiB,QAASC,UAAW,WACnF,yBAAKT,MAAO,CAACU,SAAU,QAASX,IAAI,cAAcE,IAAI,0BCFlDE,IAAZD,QAEO,SAASS,IACpB,OACI,kBAAC,IAAD,KACI,kBAACvC,EAAD,CAAQQ,oBAAoB,QAC5B,kBAAC0B,EAAD,OCNG,SAASM,IACpB,OACI,kBAAC,IAAD,KACI,kBAACxC,EAAD,CAAQQ,oBAAoB,WAC5B,kBAAC0B,EAAD,OCGQO,QACW,cAA7B1B,OAAO2B,SAASC,UAEe,UAA7B5B,OAAO2B,SAASC,UAEhB5B,OAAO2B,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACL,kBAAC,IAAD,KACI,mBCFO,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAChB,EAAD,OAEJ,kBAAC,IAAD,CAAOgB,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,WACR,kBAACR,EAAD,OAEJ,kBAAC,IAAD,CAAOQ,KAAK,QACR,kBAACT,EAAD,UDXR,OAEJU,SAASC,eAAe,SDwHtB,kBAAmBtC,WACrBA,UAAUuC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.afb1f8b0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Menu, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\n\n/**\n * \n * @param {*} props defaultSelectedKeys[home, backback, tshirt, hat]\n */\nexport default function Navbar(props) {\n    const backpackStyle = {\n        height: \"15px\",\n        width: \"15px\",\n        margin: \"0 0 8px\"\n    };\n\n    const tshirtStyle = {\n        height: \"18px\",\n        width: \"18px\",\n        margin: \"0 0 8px 1px\"\n    };\n\n    const hatStyle = {\n        height: \"18px\",\n        width: \"18px\",\n        margin: \"0 0 8px\"\n    };\n\n    function isOnDesktop() {\n        var check = false;\n        (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);\n        console.log(\"isOnDesktop: \" + check);\n        return check;\n    }\n\n    return (\n        <Menu\n            defaultSelectedKeys={props.defaultSelectedKeys}\n            mode={isOnDesktop() ? \"horizontal\" : \"vertical\"}\n        >\n            <Menu.Item key=\"home\">\n                <Link to=\"/\">\n                    <Icon type=\"home\" />\n                    Trang chủ\n                </Link>\n            </Menu.Item>\n            <Menu.Item key=\"backpack\">\n                <Link to=\"/backpack\">\n                    <Icon component={() => (<img alt=\"backpack logo\" style={backpackStyle} src=\"/backpack.ico\" />)} />\n                    Balo\n                </Link>\n            </Menu.Item>\n            <Menu.Item key=\"tshirt\">\n                <Link to=\"/tshirt\">\n                    <Icon component={() => (<img alt=\"tshirt logo\" style={tshirtStyle} src=\"/tshirt.ico\" />)} />\n                    Áo thun\n                </Link>\n            </Menu.Item>\n            <Menu.Item key=\"hat\">\n                <Link to=\"/hat\">\n                    <Icon component={() => (<img alt=\"hat logo\" style={hatStyle} src=\"/hat.ico\" />)} />\n                    Nón\n                </Link>\n            </Menu.Item>\n        </Menu>\n    );\n}","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Navbar from \"../components/navbar\";\n\nconst { Content } = Layout;\n\nexport default function HomePage() {\n    return (\n        <Layout>\n            <Navbar defaultSelectedKeys=\"home\"/>\n            <Content />\n        </Layout>\n    );\n}","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Navbar from \"../components/navbar\";\n\nexport default function BackbackPage() {\n    return (\n        <Layout>\n            <Navbar defaultSelectedKeys=\"backpack\"/>\n        </Layout>\n    );\n}","import React from \"react\";\nimport { Layout } from \"antd\";\n\nexport default function ComingsoonSign() {\n    return (\n        <Layout>\n            <div style={{ overflow: \"hidden\", height: \"90vh\", backgroundColor: \"white\", textAlign: \"center\" }}>\n                <img style={{maxWidth: \"100%\"}} alt=\"coming soon\" src=\"/comingsoonsign.png\" />\n            </div>\n        </Layout>\n    );\n}","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Navbar from \"../components/navbar\";\nimport ComingsoonSign from \"../components/comingsoonSign\";\n\nconst { Content } = Layout;\n\nexport default function HatPage() {\n    return (\n        <Layout>\n            <Navbar defaultSelectedKeys=\"hat\"/>\n            <ComingsoonSign />\n        </Layout>\n    );\n}","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Navbar from \"../components/navbar\";\nimport ComingsoonSign from \"../components/comingsoonSign\";\n\nexport default function TshirtPage() {\n    return (\n        <Layout>\n            <Navbar defaultSelectedKeys=\"tshirt\"/>\n            <ComingsoonSign />\n        </Layout>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/homePage\";\nimport BackpackPage from \"./pages/backpackPage\";\nimport HatPage from './pages/hatPage';\nimport TshirtPage from './pages/tshirtPage';\n\nexport default function App() {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <HomePage />\n            </Route>\n            <Route path=\"/backpack\">\n                <BackpackPage />\n            </Route>\n            <Route path=\"/tshirt\">\n                <TshirtPage />\n            </Route>\n            <Route path=\"/hat\">\n                <HatPage />\n            </Route>\n        </Switch>\n    );\n}"],"sourceRoot":""}